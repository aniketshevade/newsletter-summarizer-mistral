{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red20\green67\blue174;\red246\green247\blue249;\red46\green49\blue51;
\red24\green25\blue27;\red186\green6\blue115;\red162\green0\blue16;\red18\green115\blue126;\red77\green80\blue85;
}
{\*\expandedcolortbl;;\cssrgb\c9412\c35294\c73725;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c12549\c12941\c14118;\cssrgb\c78824\c15294\c52549;\cssrgb\c70196\c7843\c7059;\cssrgb\c3529\c52157\c56863;\cssrgb\c37255\c38824\c40784;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function\cf4 \strokec4  \cf5 \strokec5 summarizeNewsletters\cf4 \strokec4 () \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sheet\cf4 \strokec4  = \cf6 \strokec6 SpreadsheetApp\cf4 \strokec4 .\cf5 \strokec5 openById\cf4 \strokec4 (\cf7 \strokec7 \'91Insert Spreadsheet ID which you can get in url\'92\cf4 \strokec4 ).\cf5 \strokec5 getSheetByName\cf4 \strokec4 (\cf7 \strokec7 'Sheet1'\cf4 \strokec4 );\cb1 \
\cb3   \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 threads\cf4 \strokec4  = \cf6 \strokec6 GmailApp\cf4 \strokec4 .\cf5 \strokec5 search\cf4 \strokec4 (\cf7 \strokec7 'is:unread'\cf4 \strokec4 );\cb1 \
\cb3   \cb1 \
\cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  = \cf8 \strokec8 0\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  < \cf5 \strokec5 threads\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 thread\cf4 \strokec4  = \cf5 \strokec5 threads\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ];\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 messages\cf4 \strokec4  = \cf5 \strokec5 thread\cf4 \strokec4 .\cf5 \strokec5 getMessages\cf4 \strokec4 ();\cb1 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 j\cf4 \strokec4  = \cf8 \strokec8 0\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4  < \cf5 \strokec5 messages\cf4 \strokec4 .\cf5 \strokec5 length\cf4 \strokec4 ; \cf5 \strokec5 j\cf4 \strokec4 ++) \{\cb1 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 message\cf4 \strokec4  = \cf5 \strokec5 messages\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ];\cb1 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 date\cf4 \strokec4  = \cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 getDate\cf4 \strokec4 ();\cb1 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 sender\cf4 \strokec4  = \cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 getFrom\cf4 \strokec4 ();\cb1 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 subject\cf4 \strokec4  = \cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 getSubject\cf4 \strokec4 ();\cb1 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 body\cf4 \strokec4  = \cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 getPlainBody\cf4 \strokec4 ();\cb1 \
\cb3       \cf9 \strokec9 // Use the message's ID to create a link that opens the specific email.\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 link\cf4 \strokec4  = \cf7 \strokec7 "https://mail.google.com/mail/u/0/#all/"\cf4 \strokec4  + \cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 getId\cf4 \strokec4 ();\cb1 \
\cb3       \cb1 \
\cb3       \cf9 \strokec9 // Build the payload with a system message to guide summarization.\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 payload\cf4 \strokec4  = \{\cb1 \
\cb3          \cf7 \strokec7 "model"\cf4 \strokec4 : \cf7 \strokec7 "mistral-large-latest"\cf4 \strokec4 , \cf9 \strokec9 // adjust to your preferred model if needed\cf4 \cb1 \strokec4 \
\cb3          \cf7 \strokec7 "messages"\cf4 \strokec4 : [\cb1 \
\cb3             \{\cb1 \
\cb3               \cf7 \strokec7 "role"\cf4 \strokec4 : \cf7 \strokec7 "system"\cf4 \strokec4 ,\cb1 \
\cb3               \cf7 \strokec7 "content"\cf4 \strokec4 : \cf7 \strokec7 "You are an expert summarizer. Provide a concise summary in 3 sentences."\cf4 \cb1 \strokec4 \
\cb3             \},\cb1 \
\cb3             \{\cb1 \
\cb3               \cf7 \strokec7 "role"\cf4 \strokec4 : \cf7 \strokec7 "user"\cf4 \strokec4 ,\cb1 \
\cb3               \cf7 \strokec7 "content"\cf4 \strokec4 : \cf7 \strokec7 "Summarize the following newsletter:\\n\\n"\cf4 \strokec4  + \cf5 \strokec5 body\cf4 \cb1 \strokec4 \
\cb3             \}\cb1 \
\cb3          ]\cb1 \
\cb3       \};\cb1 \
\cb3       \cb1 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 options\cf4 \strokec4  = \{\cb1 \
\cb3          \cf7 \strokec7 "method"\cf4 \strokec4 : \cf7 \strokec7 "post"\cf4 \strokec4 ,\cb1 \
\cb3          \cf7 \strokec7 "contentType"\cf4 \strokec4 : \cf7 \strokec7 "application/json"\cf4 \strokec4 ,\cb1 \
\cb3          \cf7 \strokec7 "payload"\cf4 \strokec4 : \cf6 \strokec6 JSON\cf4 \strokec4 .\cf5 \strokec5 stringify\cf4 \strokec4 (\cf5 \strokec5 payload\cf4 \strokec4 ),\cb1 \
\cb3          \cf7 \strokec7 "headers"\cf4 \strokec4 : \{\cb1 \
\cb3              \cf7 \strokec7 "Authorization"\cf4 \strokec4 : \cf7 \strokec7 "Bearer API Key\'94\cf4 \strokec4  \cf9 \strokec9 // Replace with your API key if needed\cf4 \cb1 \strokec4 \
\cb3          \},\cb1 \
\cb3          \cf7 \strokec7 "muteHttpExceptions"\cf4 \strokec4 : \cf2 \strokec2 true\cf4 \strokec4   \cf9 \strokec9 // Allows you to log full error responses\cf4 \cb1 \strokec4 \
\cb3       \};\cb1 \
\cb3       \cb1 \
\cb3       \cf9 \strokec9 // API endpoint remains the same unless documentation specifies a different one.\cf4 \cb1 \strokec4 \
\cb3       \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 endpoint\cf4 \strokec4  = \cf7 \strokec7 'https://api.mistral.ai/v1/chat/completions'\cf4 \strokec4 ;\cb1 \
\cb3       \cb1 \
\cb3       \cf2 \strokec2 try\cf4 \strokec4  \{\cb1 \
\cb3          \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 response\cf4 \strokec4  = \cf6 \strokec6 UrlFetchApp\cf4 \strokec4 .\cf5 \strokec5 fetch\cf4 \strokec4 (\cf5 \strokec5 endpoint\cf4 \strokec4 , \cf5 \strokec5 options\cf4 \strokec4 );\cb1 \
\cb3          \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 responseCode\cf4 \strokec4  = \cf5 \strokec5 response\cf4 \strokec4 .\cf5 \strokec5 getResponseCode\cf4 \strokec4 ();\cb1 \
\cb3          \cb1 \
\cb3          \cf2 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 responseCode\cf4 \strokec4  !== \cf8 \strokec8 200\cf4 \strokec4 ) \{\cb1 \
\cb3            \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf7 \strokec7 "Error ("\cf4 \strokec4  + \cf5 \strokec5 responseCode\cf4 \strokec4  + \cf7 \strokec7 ") for message: "\cf4 \strokec4  + \cf5 \strokec5 subject\cf4 \strokec4  + \cf7 \strokec7 " - "\cf4 \strokec4  + \cf5 \strokec5 response\cf4 \strokec4 .\cf5 \strokec5 getContentText\cf4 \strokec4 ());\cb1 \
\cb3            \cf2 \strokec2 continue\cf4 \strokec4 ;\cb1 \
\cb3          \}\cb1 \
\cb3          \cb1 \
\cb3          \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 data\cf4 \strokec4  = \cf6 \strokec6 JSON\cf4 \strokec4 .\cf5 \strokec5 parse\cf4 \strokec4 (\cf5 \strokec5 response\cf4 \strokec4 .\cf5 \strokec5 getContentText\cf4 \strokec4 ());\cb1 \
\cb3          \cf9 \strokec9 // Extract the summary from the API response.\cf4 \cb1 \strokec4 \
\cb3          \cf2 \strokec2 var\cf4 \strokec4  \cf5 \strokec5 summary\cf4 \strokec4  = \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 choices\cf4 \strokec4  && \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 choices\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ] && \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 choices\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf5 \strokec5 message\cf4 \strokec4  && \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 choices\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 content\cf4 \strokec4  \cb1 \
\cb3                        ? \cf5 \strokec5 data\cf4 \strokec4 .\cf5 \strokec5 choices\cf4 \strokec4 [\cf8 \strokec8 0\cf4 \strokec4 ].\cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 content\cf4 \strokec4  \cb1 \
\cb3                        : \cf7 \strokec7 "No summary returned"\cf4 \strokec4 ;\cb1 \
\cb3          \cb1 \
\cb3          \cf5 \strokec5 sheet\cf4 \strokec4 .\cf5 \strokec5 appendRow\cf4 \strokec4 ([\cf5 \strokec5 date\cf4 \strokec4 , \cf5 \strokec5 sender\cf4 \strokec4 , \cf5 \strokec5 subject\cf4 \strokec4 , \cf5 \strokec5 summary\cf4 \strokec4 , \cf5 \strokec5 link\cf4 \strokec4 ]);\cb1 \
\cb3          \cf5 \strokec5 message\cf4 \strokec4 .\cf5 \strokec5 markRead\cf4 \strokec4 ();\cb1 \
\cb3       \} \cf2 \strokec2 catch\cf4 \strokec4  (\cf5 \strokec5 e\cf4 \strokec4 ) \{\cb1 \
\cb3          \cf6 \strokec6 Logger\cf4 \strokec4 .\cf5 \strokec5 log\cf4 \strokec4 (\cf7 \strokec7 "Exception processing message with subject: "\cf4 \strokec4  + \cf5 \strokec5 subject\cf4 \strokec4  + \cf7 \strokec7 ". "\cf4 \strokec4  + \cf5 \strokec5 e\cf4 \strokec4 );\cb1 \
\cb3       \}\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\
}